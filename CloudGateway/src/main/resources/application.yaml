server:
  port: 9090

spring:
  redis:
    host: redis
    port: 6379
  application:
    name: API-GATEWAY
  config:
    import: configserver:${CONFIG_SERVER_URL:http://localhost:9296}
  cloud:
    gateway:
      routes:
        - id: ORDER-SERVICE
          uri: http://order-service-svc
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDER-SERVICE
                fallbackuri: forward:/orderServiceFallBack
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@userKeyResolver}" #newly added
                redis-rate-limiter:
                  replenishRate: 1
                  burstCapacity: 1
        - id: PAYMENT-SERVICE
          uri: http://payment-service-svc
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENT-SERVICE
                fallbackuri: forward:/paymentServiceFallBack
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@userKeyResolver}" #newly added
                redis-rate-limiter:
                  replenishRate: 1
                  burstCapacity: 1
        - id: PRODUCT-SERVICE
          uri: http://product-service-svc
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallbackuri: forward:/productServiceFallBack
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@userKeyResolver}" #newly added
                redis-rate-limiter:
                  replenishRate: 1
                  burstCapacity: 1
  security:
    oauth2:
      client:
        registration:
          okta:
            issuer: https://dev-87612047.okta.com/oauth2/default
            audience: api://default
            client-id: 0oak79vpwutW5bbDn5d7
            client-secret: _mYXOZFPfCqoZYeb363O5JmCqLUqHSHnbvM4A5T3Il_6-2nShh2FmHbcFqADiDu6
            scope: openid, profile, email, offline_access
            # redirect-uri: '${OKTA_REDIRECT_URI}' # or localhost:9090
            # redirect-uri: 'http://localhost:9090/login/oauth2/code/okta'
logging:          #mine
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.netflix.eureka: DEBUG

#okta:
#  oauth2:
#    issuer-uri: https://dev-87612047.okta.com/oauth2/default
#    audience: api://default
#    client-id: 0oak79vpwutW5bbDn5d7
#    client-secret: _mYXOZFPfCqoZYeb363O5JmCqLUqHSHnbvM4A5T3Il_6-2nShh2FmHbcFqADiDu6
#    scopes: openid, profile, email, offline_access
#    redirect-uri: "http://localhost:9090/login/oauth2/code/okta"
